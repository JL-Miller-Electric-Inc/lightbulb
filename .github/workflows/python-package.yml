---
name: Test, Build, and Deploy LightBulb App

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.11"]
            
        steps:
        - uses: actions/checkout@v4
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Lint with flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with pytest
          run: |
            pytest -v

        - name: 'Login to GitHub Container Registry'
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        # Push the image to GitHub Container Registry
        - name: 'Push image to GitHub Container Registry'
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: ghcr.io/jl-miller-electric-inc/lightbulb:latest

    # Deploy to the macbook-air which is used for testing
    deploy_macbook_air:
      needs: build
      runs-on: [self-hosted, macbook-air]
      steps:
      - name: Run security unlock-keychain
        run: |
          security unlock-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Deploy container to macbook-air'
        run: |
          if [ "$(docker ps -aq -f name=lightbulb)" ]; then
              docker rm -f lightbulb
          fi
          docker pull ghcr.io/jl-miller-electric-inc/lightbulb:latest
          docker run -d --name lightbulb ghcr.io/jl-miller-electric-inc/lightbulb:latest
      
    # Deploy to the mini-4 which is used for production and requires manual approval
    deploy_mini_4:
        needs: deploy_macbook_air
        runs-on: [self-hosted, mini-4]
        steps:
        - name: 'Manual approval required'
          uses: benc-uk/workflow-dispatch@v1
          with:
            workflow: deploy_mini_4
            ref: main
        - name: 'Login to GitHub Container Registry'
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: 'Deploy container to mini-4'
          run: |
            if [ "$(docker ps -aq -f name=lightbulb)" ]; then
                docker rm -f lightbulb
            fi
            docker pull ghcr.io/jl-miller-electric-inc/lightbulb:latest
            docker run -d --name lightbulb ghcr.io/jl-miller-electric-inc/lightbulb:latest